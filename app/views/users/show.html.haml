.filters{data: {active: params[:status] || 'all'}}
  %ul
    %li
      %span.fa.fa-filter.fa-fw{title: 'Filter By'}
    %li.active
      = link_to 'All', account_path
    %li
      = link_to 'Pending', account_path(status: 'submitted')
    %li
      = link_to 'Approved', account_path(status: 'approved')
    %li
      = link_to 'Rejected', account_path(status: 'rejected')
    %li
      = link_to 'Completed', account_path(status: 'completed')

%section.story-group
  %aside
    .group
      %div
        %span.st-icons-map-pin.green>
        .name
          %h2
            Requested Stories
  .stories.green
    - (@stories).sort_by(&:created_at).each do |story|
      %div{:class => "story tracked", "data-state" => story.state, "data-local" => 'true', "data-owned" => story.user == current_user ? 'true' : 'false', :id => story.to_param}
        .body
          %div
            %div
              %h3= story.name
        .stats
          .row
            - if story.user != current_user
              .item.watch
                %a.unfollow{href: story_follow_path(story)}
                  %span.fa.fa-eye-slash.fa-fw>
                  %span.name Unfollow
            - elsif policy(story).update?
              .item.revise
                %a{href: edit_story_path(story)}
                  %span.fa.fa-pencil.fa-fw{title: 'Modify Submission'}>
                  Modify
            - else
              .item.watch
                &nbsp;
            .item.state
              - if story.state == 'approved'
                %span.fa.fa-check-circle-o.fa-fw>
                = story.state.titleize
              - elsif story.state == 'rejected'
                %span.fa.fa-exclamation-circle.fa-fw>
                = story.state.titleize
              - elsif story.state == 'completed'
                %span.fa.fa-thumbs-o-up.fa-fw>
                Completed
              - else
                %span.fa.fa-paper-plane-o.fa-fw>
                Submitted
            .item.type
              = story_type_icon(story.story_type)
            .item.risk
              %span.fa.fa-signal{title: 'Story Risk Assessment'}>
              = calculate_risk(story.estimate).titleize
            .item.updated
              %span.fa.fa-clock-o{title: 'Last Updated'}>
              = time_ago_in_words(story.updated_at)
            .item.author
              %span.fa.fa-user>
              - if story.user == current_user
                %strong= story.user.username
              - else
                = story.user.username
            .item.external-link
              %a.external{href: "##{story.to_param}","data-url" => story_path(story)}
                %span.fa.fa-external-link
                %span.name Details

= link_to 'Edit Account', edit_user_path(current_user)

